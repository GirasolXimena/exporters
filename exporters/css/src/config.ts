import { TokenType } from "@supernova-studio/pulsar-next"

/**
 * Main configuration of the exporter. Changes top-level behavior of the exporter in various ways.
 */
export const config = {
  /** When enabled, a disclaimer showing the fact that the file was generated automatically and should not be changed manually will appear in all style styles */
  showGeneratedFileDisclaimer: true,
  /** When enabled, a disclaimer showing the fact that the file was generated automatically and should not be changed manually will appear in all style styles */
  disclaimer: "This file was generated by Supernova and should not be changed manually",
  /** When enabled, file with all css style files imported will be generated */
  generateIndexFile: true,
  /** When enabled, empty style files will be generated. Otherwise empty are omitted */
  generateEmptyFiles: false,
  /** When enabled, token description will be shown as code comments for every exported token */
  showDescriptions: true,
  /** Style of exported token names. Allowed are: "kebab-case", "snake-case", "camel-case", "original" */
  tokenNameStyle: "kebab-case",
  /** Number of spaces used to indent every css variables */
  indent: 2,
  /** When set, will prefix each token of a specific type with provided identifier. Put empty string if not necessary */
  tokenPrefixes: {
    [TokenType.color]: "color",
    [TokenType.typography]: "typography",
    [TokenType.dimension]: "dimension",
    [TokenType.size]: "size",
    [TokenType.space]: "space",
    [TokenType.opacity]: "opacity",
    [TokenType.fontSize]: "fontSize",
    [TokenType.lineHeight]: "lineHeight",
    [TokenType.letterSpacing]: "letterSpacing",
    [TokenType.paragraphSpacing]: "paragraphSpacing",
    [TokenType.borderWidth]: "borderWidth",
    [TokenType.radius]: "radius",
    [TokenType.duration]: "duration",
    [TokenType.zIndex]: "z-index",
    [TokenType.shadow]: "shadow",
    [TokenType.border]: "border",
    [TokenType.gradient]: "gradient",
    [TokenType.string]: "string",
    [TokenType.productCopy]: "productCopy",
    [TokenType.fontFamily]: "fontFamily",
    [TokenType.fontWeight]: "fontWeight",
    [TokenType.textCase]: "textCase",
    [TokenType.textDecoration]: "textDecoration",
    [TokenType.visibility]: "visibility",
    [TokenType.blur]: "blur",
  },
  /** Name of each file that will be generated. Tokens are grouped by the type and will land in each of those files */
  styleFileNames: {
    [TokenType.color]: "colors.css",
    [TokenType.typography]: "typography.css",
    [TokenType.dimension]: "dimensions.css",
    [TokenType.size]: "sizes.css",
    [TokenType.space]: "spaces.css",
    [TokenType.opacity]: "opacities.css",
    [TokenType.fontSize]: "font-sizes.css",
    [TokenType.lineHeight]: "line-heights.css",
    [TokenType.letterSpacing]: "letter-spacings.css",
    [TokenType.paragraphSpacing]: "paragraph-spacings.css",
    [TokenType.borderWidth]: "border-widths.css",
    [TokenType.radius]: "radii.css",
    [TokenType.duration]: "durations.css",
    [TokenType.zIndex]: "z-indices.css",
    [TokenType.shadow]: "shadows.css",
    [TokenType.border]: "borders.css",
    [TokenType.gradient]: "gradients.css",
    [TokenType.string]: "strings.css",
    [TokenType.productCopy]: "product-copy.css",
    [TokenType.fontFamily]: "font-families.css",
    [TokenType.fontWeight]: "font-weights.css",
    [TokenType.textCase]: "text-cases.css",
    [TokenType.textDecoration]: "text-decorations.css",
    [TokenType.visibility]: "visibility.css",
    [TokenType.blur]: "blurs.css",
  },
  /** Name of the index file that will be generated */
  indexFileName: "index.css",
  /** All files will be written to this directory (relative to export root set by the exporter / pipeline configuration / VSCode extension) */
  baseStyleFilePath: "./styles",
  /** Index file will be written to this directory (relative to export root set by the exporter / pipeline configuration / VSCode extension) */
  baseIndexFilePath: "./",
}
